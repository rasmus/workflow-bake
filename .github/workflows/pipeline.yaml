# https://docs.github.com/en/actions/sharing-automations/reusing-workflows

name: pipeline

on:
  workflow_call:
    inputs:
      # Required ======================
      version:
        required: true
        type: string
      # Optional ======================
      bake-convention:
        required: false
        default: 'default'
        type: string
      bake-version:
        required: false
        type: string
        default: '0.30.43-beta'
      bake-destination:
        required: false
        default: 'nuget>github,container>rasmus,release>github,helm-chart>chart-museum@http://chart-museum.chart-museum/'
        type: string
      dotnet-version:
        required: false
        type: string
        default: '8.0.x'
      helm-version:
        required: false
        type: string
        default: '3.16.2'
      kind-install:
        required: false
        type: boolean
        default: false
      kind-version:
        required: false
        type: string
        default: 'v0.25.0'
      docker-compose-up-timeout:
        required: false
        type: number
        default: 300
      docker-compose-failed-logs-tail:
        required: false
        type: string
        default: '512' # can be 'all'
    secrets:
      github-packages-token:
        required: true
      dockerhub-password:
        required: false

jobs:
  build:
    runs-on:
    - self-hosted
    - ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: '${{ inputs.helm-version }}'

    - name: Install kind
      if: inputs.kind-install
      uses: helm/kind-action@v1
      with:
        install_only: true
        version: ${{ inputs.kind-version }}

    - name: Docker compose up (if present)
      run: |
        if [ -f docker-compose.yml ]; then
          echo "Docker compose file found, starting services in $PWD..."
          docker-compose up \
            --detach \
            --wait \
            --quiet-pull \
            --wait-timeout ${{ inputs.docker-compose-up-timeout }}
        fi

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '${{ inputs.dotnet-version }}'

    - name: Setup GitHub NuGet source
      run: |
        dotnet nuget add source \
          --username rasmus \
          --password ${{ secrets.github-packages-token }} \
          --store-password-in-clear-text \
          --name github-rasmus \
          "https://nuget.pkg.github.com/rasmus/index.json" || true

    - name: Bake container
      env:
        dockerhub_username: rasmus
        dockerhub_password: ${{ secrets.dockerhub-password }}
        ASPNETCORE_ENVIRONMENT: Development
        DOTNET_ENVIRONMENT: Development
        DOCKER_BUILDKIT: 1        
      run: |
        dotnet tool install --global Bake --version ${{ inputs.bake-version }}
        export PATH="$PATH:/home/ubuntu/.dotnet/tools"

        bake run \
          --convention=${{ inputs.bake-convention }} \
          --build-version ${{ inputs.version }} \
          --destination="${{ inputs.bake-destination }}"

    - name: Print Docker compose logs on failure
      if: failure()
      run: |
        if [ -f docker-compose.yml ]; then
          docker-compose logs -t --no-color --tail ${{ inputs.docker-compose-failed-logs-tail }}
        fi
